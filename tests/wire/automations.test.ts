/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { IttybitClient } from "../../src/Client";

describe("Automations", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new IttybitClient({ token: "test", version: "test", environment: server.baseUrl });

        const rawResponseBody = {
            meta: {
                request_id: "req_abcdefghij1234567890",
                org_id: "org_abcdefgh1234",
                project_id: "prj_abcdefgh1234",
                version: "2025-01-01",
                type: "list",
                limit: 10,
                total: 5,
                page: 1,
                pages: 1,
            },
            data: [
                {
                    id: "auto_abcdefgh1234",
                    name: "My Example Automation",
                    description: "This workflow will run whenever new media is created.",
                    trigger: { kind: "event", event: "media.created" },
                    workflow: [
                        { kind: "description" },
                        { kind: "image", ref: "thumbnail" },
                        {
                            kind: "conditions",
                            conditions: [{ prop: "kind", value: "video" }],
                            next: [{ kind: "subtitle", ref: "subtitle" }],
                        },
                    ],
                    status: "active",
                    created: "2025-01-01T01:23:45Z",
                    updated: "2025-01-01T01:23:45Z",
                },
                {
                    id: "id",
                    name: "name",
                    description: "description",
                    trigger: { kind: "event", event: "media.created" },
                    workflow: [{ kind: "video" }],
                    status: "active",
                    created: "2024-01-15T09:30:00Z",
                    updated: "2024-01-15T09:30:00Z",
                },
            ],
            links: {
                self: "https://api.ittybit.com/automations?page=1",
                first: "https://api.ittybit.com/automations?page=1",
                last: "https://api.ittybit.com/automations?page=1",
            },
        };
        server.mockEndpoint().get("/automations").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.automations.list();
        expect(response).toEqual({
            meta: {
                request_id: "req_abcdefghij1234567890",
                org_id: "org_abcdefgh1234",
                project_id: "prj_abcdefgh1234",
                version: "2025-01-01",
                type: "list",
                limit: 10,
                total: 5,
                page: 1,
                pages: 1,
            },
            data: [
                {
                    id: "auto_abcdefgh1234",
                    name: "My Example Automation",
                    description: "This workflow will run whenever new media is created.",
                    trigger: {
                        kind: "event",
                        event: "media.created",
                    },
                    workflow: [
                        {
                            kind: "description",
                        },
                        {
                            kind: "image",
                            ref: "thumbnail",
                        },
                        {
                            kind: "conditions",
                            conditions: [
                                {
                                    prop: "kind",
                                    value: "video",
                                },
                            ],
                            next: [
                                {
                                    kind: "subtitle",
                                    ref: "subtitle",
                                },
                            ],
                        },
                    ],
                    status: "active",
                    created: "2025-01-01T01:23:45Z",
                    updated: "2025-01-01T01:23:45Z",
                },
                {
                    id: "id",
                    name: "name",
                    description: "description",
                    trigger: {
                        kind: "event",
                        event: "media.created",
                    },
                    workflow: [
                        {
                            kind: "video",
                        },
                    ],
                    status: "active",
                    created: "2024-01-15T09:30:00Z",
                    updated: "2024-01-15T09:30:00Z",
                },
            ],
            links: {
                self: "https://api.ittybit.com/automations?page=1",
                first: "https://api.ittybit.com/automations?page=1",
                last: "https://api.ittybit.com/automations?page=1",
            },
        });
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new IttybitClient({ token: "test", version: "test", environment: server.baseUrl });
        const rawRequestBody = {
            name: "My Example Automation",
            description: "This workflow will run whenever new media is created.",
            trigger: { kind: "event", event: "media.created" },
            workflow: [
                { kind: "description" },
                { kind: "image", ref: "thumbnail" },
                { kind: "video", next: [{ kind: "subtitles", ref: "subtitles" }] },
            ],
            status: "active",
        };
        const rawResponseBody = {
            meta: {
                request_id: "req_abcdefghij1234567890",
                org_id: "org_abcdefgh1234",
                project_id: "prj_abcdefgh1234",
                version: "2025-01-01",
                type: "object",
            },
            data: {
                id: "auto_abcdefgh1234",
                name: "My Example Automation",
                description: "This workflow will run whenever new media is created.",
                trigger: { kind: "event", event: "media.created" },
                workflow: [
                    { kind: "description" },
                    { kind: "image", ref: "thumbnail" },
                    {
                        kind: "conditions",
                        conditions: [{ prop: "kind", value: "video" }],
                        next: [{ kind: "subtitle", ref: "subtitle" }],
                    },
                ],
                status: "active",
                created: "2025-01-01T01:23:45Z",
                updated: "2025-01-01T01:23:45Z",
            },
            links: {
                self: "https://api.ittybit.com/automations/auto_abcdefgh1234",
                parent: "https://api.ittybit.com/automations",
            },
        };
        server
            .mockEndpoint()
            .post("/automations")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.automations.create({
            name: "My Example Automation",
            description: "This workflow will run whenever new media is created.",
            trigger: {
                kind: "event",
                event: "media.created",
            },
            workflow: [
                {
                    kind: "description",
                },
                {
                    kind: "image",
                    ref: "thumbnail",
                },
                {
                    kind: "video",
                    next: [
                        {
                            kind: "subtitles",
                            ref: "subtitles",
                        },
                    ],
                },
            ],
            status: "active",
        });
        expect(response).toEqual({
            meta: {
                request_id: "req_abcdefghij1234567890",
                org_id: "org_abcdefgh1234",
                project_id: "prj_abcdefgh1234",
                version: "2025-01-01",
                type: "object",
            },
            data: {
                id: "auto_abcdefgh1234",
                name: "My Example Automation",
                description: "This workflow will run whenever new media is created.",
                trigger: {
                    kind: "event",
                    event: "media.created",
                },
                workflow: [
                    {
                        kind: "description",
                    },
                    {
                        kind: "image",
                        ref: "thumbnail",
                    },
                    {
                        kind: "conditions",
                        conditions: [
                            {
                                prop: "kind",
                                value: "video",
                            },
                        ],
                        next: [
                            {
                                kind: "subtitle",
                                ref: "subtitle",
                            },
                        ],
                    },
                ],
                status: "active",
                created: "2025-01-01T01:23:45Z",
                updated: "2025-01-01T01:23:45Z",
            },
            links: {
                self: "https://api.ittybit.com/automations/auto_abcdefgh1234",
                parent: "https://api.ittybit.com/automations",
            },
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new IttybitClient({ token: "test", version: "test", environment: server.baseUrl });

        const rawResponseBody = {
            meta: {
                request_id: "req_abcdefghij1234567890",
                org_id: "org_abcdefgh1234",
                project_id: "prj_abcdefgh1234",
                version: "2025-01-01",
                type: "object",
            },
            data: {
                id: "auto_abcdefgh1234",
                name: "My Example Automation",
                description: "This workflow will run whenever new media is created.",
                trigger: { kind: "event", event: "media.created" },
                workflow: [
                    { kind: "description" },
                    { kind: "image", ref: "thumbnail" },
                    {
                        kind: "conditions",
                        conditions: [{ prop: "kind", value: "video" }],
                        next: [{ kind: "subtitle", ref: "subtitle" }],
                    },
                ],
                status: "active",
                created: "2025-01-01T01:23:45Z",
                updated: "2025-01-01T01:23:45Z",
            },
            error: { message: "message" },
            links: {
                self: "https://api.ittybit.com/automations/auto_abcdefgh1234",
                parent: "https://api.ittybit.com/automations",
            },
        };
        server
            .mockEndpoint()
            .get("/automations/auto_abcdefgh1234")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.automations.get("auto_abcdefgh1234");
        expect(response).toEqual({
            meta: {
                request_id: "req_abcdefghij1234567890",
                org_id: "org_abcdefgh1234",
                project_id: "prj_abcdefgh1234",
                version: "2025-01-01",
                type: "object",
            },
            data: {
                id: "auto_abcdefgh1234",
                name: "My Example Automation",
                description: "This workflow will run whenever new media is created.",
                trigger: {
                    kind: "event",
                    event: "media.created",
                },
                workflow: [
                    {
                        kind: "description",
                    },
                    {
                        kind: "image",
                        ref: "thumbnail",
                    },
                    {
                        kind: "conditions",
                        conditions: [
                            {
                                prop: "kind",
                                value: "video",
                            },
                        ],
                        next: [
                            {
                                kind: "subtitle",
                                ref: "subtitle",
                            },
                        ],
                    },
                ],
                status: "active",
                created: "2025-01-01T01:23:45Z",
                updated: "2025-01-01T01:23:45Z",
            },
            error: {
                message: "message",
            },
            links: {
                self: "https://api.ittybit.com/automations/auto_abcdefgh1234",
                parent: "https://api.ittybit.com/automations",
            },
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new IttybitClient({ token: "test", version: "test", environment: server.baseUrl });

        const rawResponseBody = {
            meta: {
                request_id: "req_abcdefghij1234567890",
                org_id: "org_abcdefgh1234",
                project_id: "prj_abcdefgh1234",
                version: "2025-01-01",
                type: "object",
            },
            data: { message: "Automation auto_abcdefgh1234 deleted" },
            links: { self: "self", parent: "https://api.ittybit.com/automations" },
        };
        server
            .mockEndpoint()
            .delete("/automations/auto_abcdefgh1234")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.automations.delete("auto_abcdefgh1234");
        expect(response).toEqual({
            meta: {
                request_id: "req_abcdefghij1234567890",
                org_id: "org_abcdefgh1234",
                project_id: "prj_abcdefgh1234",
                version: "2025-01-01",
                type: "object",
            },
            data: {
                message: "Automation auto_abcdefgh1234 deleted",
            },
            links: {
                self: "self",
                parent: "https://api.ittybit.com/automations",
            },
        });
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new IttybitClient({ token: "test", version: "test", environment: server.baseUrl });
        const rawRequestBody = {
            name: "My Updated Automation",
            workflow: [
                { kind: "nsfw" },
                { kind: "description" },
                { kind: "image", ref: "big_thumbnail" },
                { kind: "video", next: [{ kind: "subtitle", ref: "subtitle" }] },
            ],
            status: "active",
        };
        const rawResponseBody = {
            meta: {
                request_id: "req_abcdefghij1234567890",
                org_id: "org_abcdefgh1234",
                project_id: "prj_abcdefgh1234",
                version: "2025-01-01",
                type: "object",
            },
            data: {
                id: "auto_abcdefgh1234",
                name: "My Updated Automation",
                description: "This workflow will run whenever new media is created.",
                trigger: { kind: "event", event: "media.created" },
                workflow: [
                    { kind: "nsfw" },
                    { kind: "description" },
                    { kind: "image", ref: "big_thumbnail" },
                    {
                        kind: "conditions",
                        conditions: [{ prop: "kind", value: "video" }],
                        next: [{ kind: "subtitle", ref: "subtitle" }],
                    },
                ],
                status: "active",
                created: "2025-01-01T01:23:45Z",
                updated: "2025-01-02T01:23:45Z",
            },
            links: {
                self: "https://api.ittybit.com/automations/auto_abcdefgh1234",
                parent: "https://api.ittybit.com/automations",
            },
        };
        server
            .mockEndpoint()
            .patch("/automations/auto_abcdefgh1234")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.automations.update("auto_abcdefgh1234", {
            name: "My Updated Automation",
            workflow: [
                {
                    kind: "nsfw",
                },
                {
                    kind: "description",
                },
                {
                    kind: "image",
                    ref: "big_thumbnail",
                },
                {
                    kind: "video",
                    next: [
                        {
                            kind: "subtitle",
                            ref: "subtitle",
                        },
                    ],
                },
            ],
            status: "active",
        });
        expect(response).toEqual({
            meta: {
                request_id: "req_abcdefghij1234567890",
                org_id: "org_abcdefgh1234",
                project_id: "prj_abcdefgh1234",
                version: "2025-01-01",
                type: "object",
            },
            data: {
                id: "auto_abcdefgh1234",
                name: "My Updated Automation",
                description: "This workflow will run whenever new media is created.",
                trigger: {
                    kind: "event",
                    event: "media.created",
                },
                workflow: [
                    {
                        kind: "nsfw",
                    },
                    {
                        kind: "description",
                    },
                    {
                        kind: "image",
                        ref: "big_thumbnail",
                    },
                    {
                        kind: "conditions",
                        conditions: [
                            {
                                prop: "kind",
                                value: "video",
                            },
                        ],
                        next: [
                            {
                                kind: "subtitle",
                                ref: "subtitle",
                            },
                        ],
                    },
                ],
                status: "active",
                created: "2025-01-01T01:23:45Z",
                updated: "2025-01-02T01:23:45Z",
            },
            links: {
                self: "https://api.ittybit.com/automations/auto_abcdefgh1234",
                parent: "https://api.ittybit.com/automations",
            },
        });
    });
});
