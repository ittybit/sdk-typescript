/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { IttybitClient } from "../../../src/Client";

describe("Files", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new IttybitClient({ apiKey: "test", version: "test", environment: server.baseUrl });

        const rawResponseBody = [
            {
                id: "file_abcdefgh1234",
                media_id: "med_abcdefgh1234",
                object: "source",
                kind: "video",
                type: "video/mp4",
                codec: "codec",
                container: "container",
                width: 1920,
                height: 1080,
                orientation: "orientation",
                rotation: 1.1,
                transparency: true,
                animated: true,
                frames: 1,
                duration: 123.45,
                fps: 1.1,
                filesize: 12345678,
                bitrate: 1,
                language: "language",
                label: "label",
                ref: "ref",
                folder: "folder",
                filename: "file_abcdefgh1234.mp4",
                url: "https://you.ittybit.net/file_abcdefgh1234.mp4",
                placeholder: "placeholder",
                background: "background",
                metadata: { customKey: "your custom value" },
                original: true,
                created_by: "created_by",
                created: "2025-01-01T01:23:45Z",
                updated: "2025-01-01T01:23:45Z",
                status: "ready",
            },
            {
                id: "id",
                media_id: "media_id",
                object: "source",
                kind: "video",
                type: "type",
                codec: "codec",
                container: "container",
                width: 1,
                height: 1,
                orientation: "orientation",
                rotation: 1.1,
                transparency: true,
                animated: true,
                frames: 1,
                duration: 1.1,
                fps: 1.1,
                filesize: 1,
                bitrate: 1,
                language: "language",
                label: "label",
                ref: "ref",
                folder: "folder",
                filename: "filename",
                url: "url",
                placeholder: "placeholder",
                background: "background",
                metadata: { key: "value" },
                original: true,
                created_by: "created_by",
                created: "2024-01-15T09:30:00Z",
                updated: "2024-01-15T09:30:00Z",
                status: "waiting",
            },
        ];
        server
            .mockEndpoint()
            .get("/files")
            .header("Accept-Version", "2025-08-20")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.apiDev.files.list();
        expect(response).toEqual([
            {
                id: "file_abcdefgh1234",
                media_id: "med_abcdefgh1234",
                object: "source",
                kind: "video",
                type: "video/mp4",
                codec: "codec",
                container: "container",
                width: 1920,
                height: 1080,
                orientation: "orientation",
                rotation: 1.1,
                transparency: true,
                animated: true,
                frames: 1,
                duration: 123.45,
                fps: 1.1,
                filesize: 12345678,
                bitrate: 1,
                language: "language",
                label: "label",
                ref: "ref",
                folder: "folder",
                filename: "file_abcdefgh1234.mp4",
                url: "https://you.ittybit.net/file_abcdefgh1234.mp4",
                placeholder: "placeholder",
                background: "background",
                metadata: {
                    customKey: "your custom value",
                },
                original: true,
                created_by: "created_by",
                created: "2025-01-01T01:23:45Z",
                updated: "2025-01-01T01:23:45Z",
                status: "ready",
            },
            {
                id: "id",
                media_id: "media_id",
                object: "source",
                kind: "video",
                type: "type",
                codec: "codec",
                container: "container",
                width: 1,
                height: 1,
                orientation: "orientation",
                rotation: 1.1,
                transparency: true,
                animated: true,
                frames: 1,
                duration: 1.1,
                fps: 1.1,
                filesize: 1,
                bitrate: 1,
                language: "language",
                label: "label",
                ref: "ref",
                folder: "folder",
                filename: "filename",
                url: "url",
                placeholder: "placeholder",
                background: "background",
                metadata: {
                    key: "value",
                },
                original: true,
                created_by: "created_by",
                created: "2024-01-15T09:30:00Z",
                updated: "2024-01-15T09:30:00Z",
                status: "waiting",
            },
        ]);
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new IttybitClient({ apiKey: "test", version: "test", environment: server.baseUrl });
        const rawRequestBody = {
            url: "https://ittyb.it/sample.mp4",
            folder: "ittybit/samples",
            filename: "video.mp4",
            metadata: { customKey: "your custom value" },
        };
        const rawResponseBody = {
            id: "file_abcdefgh1234",
            media_id: "med_abcdefgh1234",
            object: "source",
            kind: "video",
            type: "video/mp4",
            codec: "codec",
            container: "container",
            width: 1920,
            height: 1080,
            orientation: "orientation",
            rotation: 1.1,
            transparency: true,
            animated: true,
            frames: 1,
            duration: 123.45,
            fps: 1.1,
            filesize: 12345678,
            bitrate: 1,
            language: "language",
            label: "label",
            ref: "ref",
            folder: "ittybit/samples",
            filename: "video.mp4",
            url: "https://you.ittybit.net/ittybit/samples/video.mp4",
            placeholder: "placeholder",
            background: "background",
            metadata: { customKey: "your custom value" },
            original: true,
            created_by: "created_by",
            created: "2025-01-01T01:23:45Z",
            updated: "2025-01-01T01:23:45Z",
            status: "ready",
        };
        server
            .mockEndpoint()
            .post("/files")
            .header("Accept-Version", "2025-08-20")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.apiDev.files.create({
            url: "https://ittyb.it/sample.mp4",
            folder: "ittybit/samples",
            filename: "video.mp4",
            metadata: {
                customKey: "your custom value",
            },
        });
        expect(response).toEqual({
            id: "file_abcdefgh1234",
            media_id: "med_abcdefgh1234",
            object: "source",
            kind: "video",
            type: "video/mp4",
            codec: "codec",
            container: "container",
            width: 1920,
            height: 1080,
            orientation: "orientation",
            rotation: 1.1,
            transparency: true,
            animated: true,
            frames: 1,
            duration: 123.45,
            fps: 1.1,
            filesize: 12345678,
            bitrate: 1,
            language: "language",
            label: "label",
            ref: "ref",
            folder: "ittybit/samples",
            filename: "video.mp4",
            url: "https://you.ittybit.net/ittybit/samples/video.mp4",
            placeholder: "placeholder",
            background: "background",
            metadata: {
                customKey: "your custom value",
            },
            original: true,
            created_by: "created_by",
            created: "2025-01-01T01:23:45Z",
            updated: "2025-01-01T01:23:45Z",
            status: "ready",
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new IttybitClient({ apiKey: "test", version: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "file_abcdefgh1234",
            media_id: "med_abcdefgh1234",
            object: "source",
            kind: "video",
            type: "video/mp4",
            codec: "codec",
            container: "container",
            width: 1920,
            height: 1080,
            orientation: "orientation",
            rotation: 1.1,
            transparency: true,
            animated: true,
            frames: 1,
            duration: 123.45,
            fps: 1.1,
            filesize: 12345678,
            bitrate: 1,
            language: "language",
            label: "label",
            ref: "ref",
            folder: "folder",
            filename: "file_abcdefgh1234.mp4",
            url: "https://you.ittybit.net/file_abcdefgh1234.mp4",
            placeholder: "placeholder",
            background: "background",
            metadata: { customKey: "your custom value" },
            original: true,
            created_by: "created_by",
            created: "2025-01-01T01:23:45Z",
            updated: "2025-01-01T01:23:45Z",
            status: "ready",
        };
        server
            .mockEndpoint()
            .get("/files/file_abcdefgh1234")
            .header("Accept-Version", "2025-08-20")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.apiDev.files.get("file_abcdefgh1234");
        expect(response).toEqual({
            id: "file_abcdefgh1234",
            media_id: "med_abcdefgh1234",
            object: "source",
            kind: "video",
            type: "video/mp4",
            codec: "codec",
            container: "container",
            width: 1920,
            height: 1080,
            orientation: "orientation",
            rotation: 1.1,
            transparency: true,
            animated: true,
            frames: 1,
            duration: 123.45,
            fps: 1.1,
            filesize: 12345678,
            bitrate: 1,
            language: "language",
            label: "label",
            ref: "ref",
            folder: "folder",
            filename: "file_abcdefgh1234.mp4",
            url: "https://you.ittybit.net/file_abcdefgh1234.mp4",
            placeholder: "placeholder",
            background: "background",
            metadata: {
                customKey: "your custom value",
            },
            original: true,
            created_by: "created_by",
            created: "2025-01-01T01:23:45Z",
            updated: "2025-01-01T01:23:45Z",
            status: "ready",
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new IttybitClient({ apiKey: "test", version: "test", environment: server.baseUrl });

        const rawResponseBody = { message: "file_abcdefgh1234 deleted" };
        server
            .mockEndpoint()
            .delete("/files/file_abcdefgh1234")
            .header("Accept-Version", "2025-08-20")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.apiDev.files.delete("file_abcdefgh1234");
        expect(response).toEqual({
            message: "file_abcdefgh1234 deleted",
        });
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new IttybitClient({ apiKey: "test", version: "test", environment: server.baseUrl });
        const rawRequestBody = {
            folder: "updated/folder",
            filename: "new_filename.mp4",
            metadata: { customKey: "a different custom value" },
        };
        const rawResponseBody = {
            id: "file_abcdefgh1234",
            media_id: "med_abcdefgh1234",
            object: "source",
            kind: "video",
            type: "video/mp4",
            codec: "codec",
            container: "container",
            width: 1920,
            height: 1080,
            orientation: "orientation",
            rotation: 1.1,
            transparency: true,
            animated: true,
            frames: 1,
            duration: 123.45,
            fps: 1.1,
            filesize: 12345678,
            bitrate: 1,
            language: "language",
            label: "label",
            ref: "ref",
            folder: "updated/folder",
            filename: "new_filename.mp4",
            url: "https://you.ittybit.net/updated/folder/new_filename.mp4",
            placeholder: "placeholder",
            background: "background",
            metadata: { customKey: "a different custom value" },
            original: true,
            created_by: "created_by",
            created: "2025-01-01T01:23:45Z",
            updated: "2025-01-02T01:23:45Z",
            status: "ready",
        };
        server
            .mockEndpoint()
            .patch("/files/file_abcdefgh1234")
            .header("Accept-Version", "2025-08-20")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.apiDev.files.update("file_abcdefgh1234", {
            folder: "updated/folder",
            filename: "new_filename.mp4",
            metadata: {
                customKey: "a different custom value",
            },
        });
        expect(response).toEqual({
            id: "file_abcdefgh1234",
            media_id: "med_abcdefgh1234",
            object: "source",
            kind: "video",
            type: "video/mp4",
            codec: "codec",
            container: "container",
            width: 1920,
            height: 1080,
            orientation: "orientation",
            rotation: 1.1,
            transparency: true,
            animated: true,
            frames: 1,
            duration: 123.45,
            fps: 1.1,
            filesize: 12345678,
            bitrate: 1,
            language: "language",
            label: "label",
            ref: "ref",
            folder: "updated/folder",
            filename: "new_filename.mp4",
            url: "https://you.ittybit.net/updated/folder/new_filename.mp4",
            placeholder: "placeholder",
            background: "background",
            metadata: {
                customKey: "a different custom value",
            },
            original: true,
            created_by: "created_by",
            created: "2025-01-01T01:23:45Z",
            updated: "2025-01-02T01:23:45Z",
            status: "ready",
        });
    });
});
