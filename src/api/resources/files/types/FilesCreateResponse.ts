/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface FilesCreateResponse {
    meta?: FilesCreateResponse.Meta;
    data?: FilesCreateResponse.Data;
    error?: FilesCreateResponse.Error_;
    links?: FilesCreateResponse.Links;
}

export namespace FilesCreateResponse {
    export interface Meta {
        request_id?: string;
        org_id?: string;
        project_id?: string;
        version?: string;
        type?: Meta.Type;
    }

    export namespace Meta {
        export type Type = "object" | "list";
        export const Type = {
            Object: "object",
            List: "list",
        } as const;
    }

    export interface Data {
        id: string;
        media_id: string;
        object: Data.Object_;
        kind: Data.Kind;
        type: string;
        codec?: string;
        container?: string;
        width?: number;
        height?: number;
        orientation?: string;
        rotation?: number;
        transparency?: boolean;
        animated?: boolean;
        frames?: number;
        duration?: number;
        fps?: number;
        filesize: number;
        bitrate?: number;
        language?: string;
        label?: string;
        ref?: string;
        folder?: string;
        filename?: string;
        url: string;
        placeholder?: string;
        background?: string;
        metadata?: Record<string, unknown>;
        original?: boolean;
        created_by?: string;
        created: string;
        updated: string;
        status: Data.Status;
    }

    export namespace Data {
        export type Object_ = "source" | "track" | "intelligence";
        export const Object_ = {
            Source: "source",
            Track: "track",
            Intelligence: "intelligence",
        } as const;
        export type Kind = "video" | "image" | "audio";
        export const Kind = {
            Video: "video",
            Image: "image",
            Audio: "audio",
        } as const;
        export type Status = "waiting" | "processing" | "ready" | "failed";
        export const Status = {
            Waiting: "waiting",
            Processing: "processing",
            Ready: "ready",
            Failed: "failed",
        } as const;
    }

    export interface Error_ {
        message?: string;
    }

    export interface Links {
        self?: string;
        parent?: string;
    }
}
