/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface TasksGetResponse {
    meta?: TasksGetResponse.Meta;
    data?: TasksGetResponse.Data;
    error?: TasksGetResponse.Error_;
    links?: TasksGetResponse.Links;
}

export namespace TasksGetResponse {
    export interface Meta {
        request_id?: string;
        org_id?: string;
        project_id?: string;
        version?: string;
        type?: Meta.Type;
    }

    export namespace Meta {
        export type Type = "object" | "list";
        export const Type = {
            Object: "object",
            List: "list",
        } as const;
    }

    export interface Data {
        id: string;
        object: string;
        kind: Data.Kind;
        input?: Record<string, unknown>;
        options?: Record<string, unknown>;
        output?: Record<string, unknown>;
        status: Data.Status;
        progress?: number;
        error?: string;
        created_by?: string;
        created: string;
        updated: string;
        parent_id?: string;
        workflow?: unknown[];
        results?: Data.Results;
    }

    export namespace Data {
        export type Kind =
            | "ingest"
            | "video"
            | "image"
            | "audio"
            | "chapters"
            | "subtitles"
            | "thumbnails"
            | "nsfw"
            | "speech"
            | "description"
            | "outline"
            | "prompt"
            | "workflow"
            | "conditions"
            | "http";
        export const Kind = {
            Ingest: "ingest",
            Video: "video",
            Image: "image",
            Audio: "audio",
            Chapters: "chapters",
            Subtitles: "subtitles",
            Thumbnails: "thumbnails",
            Nsfw: "nsfw",
            Speech: "speech",
            Description: "description",
            Outline: "outline",
            Prompt: "prompt",
            Workflow: "workflow",
            Conditions: "conditions",
            Http: "http",
        } as const;
        export type Status =
            | "pending"
            | "waiting"
            | "processing"
            | "ready"
            | "completed"
            | "failed"
            | "error"
            | "cancelled";
        export const Status = {
            Pending: "pending",
            Waiting: "waiting",
            Processing: "processing",
            Ready: "ready",
            Completed: "completed",
            Failed: "failed",
            Error: "error",
            Cancelled: "cancelled",
        } as const;

        export interface Results {
            passed?: Record<string, unknown>[];
            failed?: Record<string, unknown>[];
            continue?: boolean;
        }
    }

    export interface Error_ {
        message?: string;
    }

    export interface Links {
        self?: string;
        parent?: string;
    }
}
