/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface MediaGetResponse {
    meta?: MediaGetResponse.Meta;
    data?: MediaGetResponse.Data;
    error?: MediaGetResponse.Error_;
    links?: MediaGetResponse.Links;
}

export namespace MediaGetResponse {
    export interface Meta {
        request_id?: string;
        org_id?: string;
        project_id?: string;
        version?: string;
        type?: Meta.Type;
    }

    export namespace Meta {
        export type Type = "object" | "list";
        export const Type = {
            Object: "object",
            List: "list",
        } as const;
    }

    export interface Data {
        id: string;
        object: string;
        kind?: Data.Kind;
        title?: string;
        alt?: string;
        width?: number;
        height?: number;
        duration?: number;
        files: Data.Files.Item[];
        urls: Record<string, unknown>;
        background?: string;
        metadata?: Record<string, unknown>;
        created: string;
        updated: string;
    }

    export namespace Data {
        export type Kind = "video" | "image" | "audio";
        export const Kind = {
            Video: "video",
            Image: "image",
            Audio: "audio",
        } as const;
        export type Files = Files.Item[];

        export namespace Files {
            export interface Item {
                id: string;
                object: Item.Object_;
                kind: Item.Kind;
                type: string;
                codec?: string;
                container?: string;
                width?: number;
                height?: number;
                orientation?: Item.Orientation;
                rotation?: number;
                transparency?: boolean;
                frames?: number;
                duration?: number;
                fps?: number;
                filesize: number;
                bitrate?: number;
                ref?: string;
                folder?: string;
                filename?: string;
                url: string;
                metadata?: Record<string, unknown>;
                original?: boolean;
                created: string;
                updated: string;
                status: Item.Status;
            }

            export namespace Item {
                export type Object_ = "source" | "track" | "intelligence";
                export const Object_ = {
                    Source: "source",
                    Track: "track",
                    Intelligence: "intelligence",
                } as const;
                export type Kind = "video" | "image" | "audio";
                export const Kind = {
                    Video: "video",
                    Image: "image",
                    Audio: "audio",
                } as const;
                export type Orientation = "landscape" | "portrait" | "square";
                export const Orientation = {
                    Landscape: "landscape",
                    Portrait: "portrait",
                    Square: "square",
                } as const;
                export type Status = "waiting" | "processing" | "ready" | "failed";
                export const Status = {
                    Waiting: "waiting",
                    Processing: "processing",
                    Ready: "ready",
                    Failed: "failed",
                } as const;
            }
        }
    }

    export interface Error_ {
        message?: string;
    }

    export interface Links {
        self?: string;
        parent?: string;
    }
}
