/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments.js";
import * as core from "../../../../core/index.js";
import { Automations } from "../resources/automations/client/Client.js";
import { Files } from "../resources/files/client/Client.js";
import { Media } from "../resources/media/client/Client.js";
import { Tasks } from "../resources/tasks/client/Client.js";
import { Signatures } from "../resources/signatures/client/Client.js";

export declare namespace ApiDev {
    export interface Options {
        environment?: core.Supplier<environments.IttybitEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        apiKey?: core.Supplier<core.BearerToken | undefined>;
        /** Override the ACCEPT_VERSION header */
        version?: core.Supplier<string | undefined>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
        fetcher?: core.FetchFunction;
    }
}

export class ApiDev {
    protected readonly _options: ApiDev.Options;
    protected _automations: Automations | undefined;
    protected _files: Files | undefined;
    protected _media: Media | undefined;
    protected _tasks: Tasks | undefined;
    protected _signatures: Signatures | undefined;

    constructor(_options: ApiDev.Options = {}) {
        this._options = _options;
    }

    public get automations(): Automations {
        return (this._automations ??= new Automations(this._options));
    }

    public get files(): Files {
        return (this._files ??= new Files(this._options));
    }

    public get media(): Media {
        return (this._media ??= new Media(this._options));
    }

    public get tasks(): Tasks {
        return (this._tasks ??= new Tasks(this._options));
    }

    public get signatures(): Signatures {
        return (this._signatures ??= new Signatures(this._options));
    }
}
