/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Ittybit from "../index.js";

export interface Task {
    id: string;
    object: string;
    kind?: Ittybit.TaskKind;
    input?: Record<string, unknown>;
    options?: Record<string, unknown>;
    output?: Record<string, unknown>;
    status: Task.Status;
    progress?: number;
    error?: string;
    created_by?: string;
    created: string;
    updated: string;
    parent_id?: string;
    workflow?: unknown[];
    results?: Task.Results;
}

export namespace Task {
    export type Status =
        | "pending"
        | "waiting"
        | "processing"
        | "ready"
        | "completed"
        | "failed"
        | "error"
        | "cancelled";
    export const Status = {
        Pending: "pending",
        Waiting: "waiting",
        Processing: "processing",
        Ready: "ready",
        Completed: "completed",
        Failed: "failed",
        Error: "error",
        Cancelled: "cancelled",
    } as const;

    export interface Results {
        passed?: Record<string, unknown>[];
        failed?: Record<string, unknown>[];
        continue?: boolean;
    }
}
