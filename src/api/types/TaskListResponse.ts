/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface TaskListResponse {
    meta?: TaskListResponse.Meta;
    data?: TaskListResponse.Data.Item[];
    error?: TaskListResponse.Error_;
    links?: TaskListResponse.Links;
}

export namespace TaskListResponse {
    export interface Meta {
        request_id?: string;
        org_id?: string;
        project_id?: string;
        version?: string;
        type?: Meta.Type;
        limit?: number;
        total?: number;
        page?: number;
        pages?: number;
    }

    export namespace Meta {
        export type Type = "object" | "list";
        export const Type = {
            Object: "object",
            List: "list",
        } as const;
    }

    export type Data = Data.Item[];

    export namespace Data {
        export interface Item {
            id: string;
            object: string;
            kind: Item.Kind;
            input?: Record<string, unknown>;
            options?: Record<string, unknown>;
            output?: Record<string, unknown>;
            status: Item.Status;
            progress?: number;
            error?: string;
            created_by?: string;
            created: string;
            updated: string;
            parent_id?: string;
            workflow?: unknown[];
            results?: Item.Results;
        }

        export namespace Item {
            export type Kind =
                | "ingest"
                | "video"
                | "image"
                | "audio"
                | "chapters"
                | "subtitles"
                | "thumbnails"
                | "nsfw"
                | "speech"
                | "description"
                | "outline"
                | "prompt"
                | "workflow"
                | "conditions"
                | "http";
            export const Kind = {
                Ingest: "ingest",
                Video: "video",
                Image: "image",
                Audio: "audio",
                Chapters: "chapters",
                Subtitles: "subtitles",
                Thumbnails: "thumbnails",
                Nsfw: "nsfw",
                Speech: "speech",
                Description: "description",
                Outline: "outline",
                Prompt: "prompt",
                Workflow: "workflow",
                Conditions: "conditions",
                Http: "http",
            } as const;
            export type Status =
                | "pending"
                | "waiting"
                | "processing"
                | "ready"
                | "completed"
                | "failed"
                | "error"
                | "cancelled";
            export const Status = {
                Pending: "pending",
                Waiting: "waiting",
                Processing: "processing",
                Ready: "ready",
                Completed: "completed",
                Failed: "failed",
                Error: "error",
                Cancelled: "cancelled",
            } as const;

            export interface Results {
                passed?: Record<string, unknown>[];
                failed?: Record<string, unknown>[];
                continue?: boolean;
            }
        }
    }

    export interface Error_ {
        message?: string;
    }

    export interface Links {
        self?: string;
        first?: string;
        next?: string;
        prev?: string;
        last?: string;
    }
}
